/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pathfinder;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.imageio.ImageIO;
import javax.swing.SwingUtilities;

/**
 *
 * @author grzala
 */
public class Canvas extends javax.swing.JPanel {

    /**
     * Creates new form Canvas
     */
    
    int x, y;
    
    private Navigator n;
    private BufferedImage background;
    
    private int pointsize = 5;
   
    
    public Canvas() {
        initComponents();
        setIgnoreRepaint(true);
        n = new Navigator(); // unused but prevents null exception
        background = null;
        
        x = 0; y = 0;
    }
    
    public void setNavigator(Navigator n) {
        this.n = n;
    }
    
    public void setImage(String path) {
        try {                
          background = ImageIO.read(new File(path));
        } catch (IOException ex) {
        }
        
        repaint();
    }
    
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON); 
        
        //image
        if (background != null) {
            g2d.drawImage(background, 0, 0, this);
        }
        
        //start
        g2d.setColor(Color.RED);
        Point start = n.getStart();
        g2d.fillOval(start.x-(pointsize/2), start.y-(pointsize/2), pointsize, pointsize);
        
        //goals
        for(Point p : n.getGoals()) {
            g2d.setColor(Color.BLUE);
            int r = pointsize;
            g2d.fillOval(p.x-(r/2), p.y-(r/2), r, r);
        }
       
        //paths
        ArrayList<ArrayList<Point>> lines = n.getLines();
        
        for (ArrayList<Point> line : lines) {
            System.out.println("LINESIZE: "+line.size());
            for (int i = 0; i < line.size()-1; i++) {
                Point p1 = line.get(i);
                Point p2 = line.get(i+1);
                g2d.drawLine(p1.x, p1.y, p2.x, p2.y);
            }
        }
        
        Dimension d = getSize();
        g2d.setColor(Color.RED);
        g2d.drawRect(0, 0, d.width-1, d.height-1);
        
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if(SwingUtilities.isLeftMouseButton(evt)) {
            n.setStart(evt.getX(), evt.getY());
        } else if(SwingUtilities.isRightMouseButton(evt)) {
            n.addGoal(evt.getX(), evt.getY());
        }
        
        repaint();
    }//GEN-LAST:event_formMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
